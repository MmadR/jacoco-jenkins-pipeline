<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>jacoco-jenkins-pipeline</artifactId>
        <groupId>mmadr</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>report</artifactId>
    <packaging>pom</packaging>

    <dependencies>
        <dependency>
            <groupId>mmadr</groupId>
            <artifactId>module1</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>mmadr</groupId>
            <artifactId>module2</artifactId>
            <version>${project.version}</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <!--
                    "report" goal can't cross boundaries of modules,
                    while "report-aggregate" can, so let's use it, however
                    by default it will load "jacoco.exec" from this module and from module "jar",
                    so let's also change file name for this module to avoid intersection
                    -->
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>report-aggregate</goal>
                        </goals>
                        <configuration>
                            <dataFileIncludes>**/jacoco.exec</dataFileIncludes>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


</project>